1 b站看课
    https://www.bilibili.com/video/BV1d54y1g7db?p=10&spm_id_from=pageDriver&vd_source=c4b2904d0d8b6161e10e9b277cd3de07
2 获取海克斯名字
  发现海克斯胜率网站是动态加载，教的requests只能实现获取静态加载的对象，
  即只能获取一部分的海克斯。
  后改用playwright库来处理动态加载的内容并与BeautifulSoup结合。
  注：python文件名字不能与库本身名字一样。
3 获取海克斯排名
  修改代码获取海克斯排名时，发现根本没有返回内容。
  tmd发现是这句类标签"flex items-center justify-end px-[14px] css-1puwvti tbl-cell-right-border"
  "px-[14px] css-1puwvti"中间直接复制的是两个空格，但是要根据这个筛选的话，要只有一个空格是对的。
  
  能返回排名了，但是只能返回一部分的排名。
  因为几把排名数据在代码里是动态加载的，tmd海克斯名字在代码里是总共有几个就写了几行，
  md排名分开写的说是，搞几把动态加载，浏览器一页有几个，它tm代码里显示几个，真的牛逼。
  
  md还是要先把课看完，课里面根据每页的起始编号遍历多个页面，我们这里就可以先获取总页面高度，再去遍历。

  tmd每次代码跑到节外生枝就出问题，我将这类问题统称为节外生枝问题。
  
  class=后面的条件单词之间是有空格的，style=后面的jb是没有空格的，这是第一。
  经过我的重重排查，发现节外生枝及往后的style最后要有";"，而且单词之间又有了空格；而它之前的是没有的分号和空格的，这是看python调试看出来的，你直接复制html勾八还都是有分号的。真的sb！
  不知道s12的代码会不会变，md!

  终于解决“节外生枝”问题了，md真的是节外生枝，海克斯也是个jb。
4 封装get_hex和get_rank成函数，并把两者输出合并
  输出格式不好搞，后面应该也用不到，软件直接用数据的话，就不搞了。
5 根据我输入的海克斯名字找到对应的条目
  ez
6 屏幕识别第一步：识别到对应海克斯名字，打印对应排名
  要实现这个功能，你可以使用 Python 的屏幕截图和图像处理库来捕获屏幕，并识别截图中的文本。以下是实现这个功能的步骤：

    屏幕截图: 使用 Pillow（Python Imaging Library）库来捕获屏幕截图。
    文本识别: 使用 pytesseract 进行光学字符识别（OCR）来提取图像中的文本。
    匹配文本: 检查提取的文本是否包含 name_to_find，然后打印匹配的条目。

  还需要安装 Tesseract-OCR 作为 pytesseract 的后端。请根据你的操作系统下载并安装 Tesseract。
  听说这个识别中文一坨，改用EasyOCR
  识别没问题，但是和结果会和网站的名称有出入，例如：
  识别结果是：辅助魔像 |1', '来个好伙计 !', '双重目的'
  网站名称是：辅助魔像 II,来个好伙计！
  这怎么办？
  那就只能只识别中文，然后输出好几个，让用户自己看了
  nonono，md gpt真是天才，用标准化文本和模糊匹配就可以识别出海克斯，虽然会出两个“辅助魔像”，但起码能用了
  标准化文本效果有待商榷
7 屏幕识别第二步：根据阶段显示不同排名。感觉没必要，直接所有全显示，用户自己看好了，pass。
8 不对，还是要stage识别的，识别到2-1，3-2,4-2，再开始抓取屏幕
  用刷海克斯时，屏幕上出现的“选择一件”作为判断依据
  当刷新按钮灰掉时，重新截取一遍屏幕并识别。
9 开始设置弹出窗口
  我说怎么窗口设置的位置老是不对，我的显示器有125%的缩放，fk
10 后面要改成点图标，手动刷新；窗口优先级不如lol，不能置于顶层
  程序没问题，窗口优先级遇到史诗级瓶颈，考虑用overwolf写一个插件。

11 生成exe